# Generated by Django 5.1.5 on 2025-05-27 12:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("pedagog", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="ai",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ais",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Foydalanuvchi",
            ),
        ),
        migrations.AddField(
            model_name="download",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Foydalanuvchi",
            ),
        ),
        migrations.AddField(
            model_name="downloadtoken",
            name="download",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="pedagog.download",
                verbose_name="Yuklama",
            ),
        ),
        migrations.AddField(
            model_name="electronresource",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="files",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="electronresourcesubcategory",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sub_categories",
                to="pedagog.electronresourcecategory",
            ),
        ),
        migrations.AddField(
            model_name="electronresourcesubcategory",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sub_categories",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="electronresource",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="resources",
                to="pedagog.electronresourcesubcategory",
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="download_users",
            field=models.ManyToManyField(
                blank=True,
                related_name="downloaded_media",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Yuklab olganlar",
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="media",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Foydalanuvchi",
            ),
        ),
        migrations.AddField(
            model_name="download",
            name="media",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="pedagog.media",
                verbose_name="Media",
            ),
        ),
        migrations.AddField(
            model_name="moderator",
            name="classes",
            field=models.ManyToManyField(
                blank=True,
                related_name="moderators",
                to="pedagog.classes",
                verbose_name="Sinf",
            ),
        ),
        migrations.AddField(
            model_name="moderator",
            name="docs",
            field=models.ManyToManyField(
                blank=True,
                related_name="moderators",
                to="pedagog.document",
                verbose_name="Hujjatlar",
            ),
        ),
        migrations.AddField(
            model_name="moderator",
            name="resource_type",
            field=models.ManyToManyField(
                blank=True,
                related_name="moderators",
                to="pedagog.electronresourcecategory",
                verbose_name="Resurs turlari",
            ),
        ),
        migrations.AddField(
            model_name="moderator",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Foydalanuvchi",
            ),
        ),
        migrations.AddField(
            model_name="plan",
            name="classes",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plans",
                to="pedagog.classes",
                verbose_name="Sinf",
            ),
        ),
        migrations.AddField(
            model_name="plan",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plans",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="plan",
            name="quarter",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="pedagog.quarter",
                verbose_name="Chorak",
            ),
        ),
        migrations.AddField(
            model_name="moderator",
            name="quarters",
            field=models.ManyToManyField(
                blank=True,
                related_name="moderators",
                to="pedagog.quarter",
                verbose_name="Choraklar",
            ),
        ),
        migrations.AddField(
            model_name="schooltype",
            name="classes",
            field=models.ManyToManyField(
                blank=True,
                help_text="The classes that belong to this school type.",
                related_name="school_types",
                to="pedagog.classes",
                verbose_name="Classes",
            ),
        ),
        migrations.AddField(
            model_name="plan",
            name="school_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plans",
                to="pedagog.schooltype",
                verbose_name="Maktab turi",
            ),
        ),
        migrations.AddField(
            model_name="moderator",
            name="school_type",
            field=models.ManyToManyField(
                blank=True,
                related_name="moderators",
                to="pedagog.schooltype",
                verbose_name="Maktab turi",
            ),
        ),
        migrations.AddField(
            model_name="plan",
            name="science",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plans",
                to="pedagog.science",
                verbose_name="Fan",
            ),
        ),
        migrations.AddField(
            model_name="moderator",
            name="science",
            field=models.ManyToManyField(
                blank=True,
                related_name="moderators",
                to="pedagog.science",
                verbose_name="Fan",
            ),
        ),
        migrations.AddField(
            model_name="classes",
            name="science",
            field=models.ManyToManyField(
                blank=True,
                help_text="The science subjects taught in this class.",
                related_name="classes",
                to="pedagog.science",
                verbose_name="Sciences",
            ),
        ),
        migrations.AddField(
            model_name="science",
            name="language",
            field=models.ManyToManyField(
                blank=True,
                help_text="The languages in which this science subject is taught.",
                related_name="sciences",
                to="pedagog.sciencelanguage",
                verbose_name="Languages",
            ),
        ),
        migrations.AddField(
            model_name="plan",
            name="science_language",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plans",
                to="pedagog.sciencelanguage",
                verbose_name="Fan tili",
            ),
        ),
        migrations.AddField(
            model_name="moderator",
            name="science_language",
            field=models.ManyToManyField(
                blank=True,
                related_name="moderators",
                to="pedagog.sciencelanguage",
                verbose_name="Fan tili",
            ),
        ),
        migrations.AddField(
            model_name="seometacategorydata",
            name="category",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="seo_meta",
                to="pedagog.electronresourcecategory",
            ),
        ),
        migrations.AddField(
            model_name="seoogcategorydata",
            name="category",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="og_meta",
                to="pedagog.electronresourcecategory",
            ),
        ),
        migrations.AddField(
            model_name="seotwittercategorydata",
            name="category",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="twitter_meta",
                to="pedagog.electronresourcecategory",
            ),
        ),
        migrations.AddField(
            model_name="tmrappeal",
            name="classes",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tmr_appeals",
                to="pedagog.classes",
                verbose_name="Sinf",
            ),
        ),
        migrations.AddField(
            model_name="tmrappeal",
            name="school_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tmr_appeals",
                to="pedagog.schooltype",
                verbose_name="Maktab turi",
            ),
        ),
        migrations.AddField(
            model_name="tmrappeal",
            name="science",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tmr_appeals",
                to="pedagog.science",
                verbose_name="Fan",
            ),
        ),
        migrations.AddField(
            model_name="tmrappeal",
            name="science_language",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tmr_appeals",
                to="pedagog.sciencelanguage",
                verbose_name="Fan tili",
            ),
        ),
        migrations.AddField(
            model_name="tmrappeal",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Foydalanuvchi",
            ),
        ),
        migrations.AddField(
            model_name="tmrfiles",
            name="tmr_appeal",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="files",
                to="pedagog.tmrappeal",
                verbose_name="TMR",
            ),
        ),
        migrations.AddField(
            model_name="topic",
            name="plan_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="topics",
                to="pedagog.plan",
            ),
        ),
        migrations.AddField(
            model_name="topic",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="topic",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Foydalanuvchi",
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="topic_id",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="medias",
                to="pedagog.topic",
                verbose_name="Mavzu",
            ),
        ),
        migrations.AddField(
            model_name="ai",
            name="topic",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ais",
                to="pedagog.topic",
                verbose_name="Mavzu",
            ),
        ),
        migrations.AddField(
            model_name="weeks",
            name="quarter",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="pedagog.quarter",
                verbose_name="Chorak",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="plan",
            unique_together={
                ("quarter", "school_type", "classes", "science", "science_language")
            },
        ),
    ]
