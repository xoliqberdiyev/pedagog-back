# Generated by Django 5.1.5 on 2025-05-27 12:52

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("pedagog", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="Viloyat")),
                (
                    "name_uz",
                    models.CharField(max_length=255, null=True, verbose_name="Viloyat"),
                ),
                (
                    "name_ru",
                    models.CharField(max_length=255, null=True, verbose_name="Viloyat"),
                ),
                (
                    "name_en",
                    models.CharField(max_length=255, null=True, verbose_name="Viloyat"),
                ),
                (
                    "name_ko",
                    models.CharField(max_length=255, null=True, verbose_name="Viloyat"),
                ),
                (
                    "soato_id",
                    models.CharField(
                        blank=True,
                        help_text="Soato ID for the region",
                        max_length=255,
                        null=True,
                        verbose_name="Soato ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Viloyat",
                "verbose_name_plural": "Viloyatlar",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SmsConfirm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("code", models.IntegerField(verbose_name="Kod")),
                (
                    "try_count",
                    models.IntegerField(default=0, verbose_name="Urinishlar soni"),
                ),
                (
                    "resend_count",
                    models.IntegerField(
                        default=0, verbose_name="Qayta yuborishlar soni"
                    ),
                ),
                (
                    "phone",
                    models.CharField(max_length=255, verbose_name="Telefon raqami"),
                ),
                (
                    "expire_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="Muddati"),
                ),
                (
                    "unlock_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Bloklanish vaqti"
                    ),
                ),
                (
                    "resend_unlock_time",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Qayta yuborish bloklanish vaqti",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="Tuman")),
                (
                    "name_uz",
                    models.CharField(max_length=255, null=True, verbose_name="Tuman"),
                ),
                (
                    "name_ru",
                    models.CharField(max_length=255, null=True, verbose_name="Tuman"),
                ),
                (
                    "name_en",
                    models.CharField(max_length=255, null=True, verbose_name="Tuman"),
                ),
                (
                    "name_ko",
                    models.CharField(max_length=255, null=True, verbose_name="Tuman"),
                ),
                (
                    "soato_id",
                    models.CharField(
                        blank=True,
                        help_text="Soato ID for the district",
                        max_length=255,
                        null=True,
                        verbose_name="Soato ID",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="districts",
                        to="users.region",
                        verbose_name="Viloyat",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tuman",
                "verbose_name_plural": "Tumanlar",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "phone",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Telefon"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Foydalanuvchi nomi",
                    ),
                ),
                (
                    "father_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Otasining ismi",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="avatar/",
                        verbose_name="Avatar",
                    ),
                ),
                (
                    "validated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Tasdiqlangan vaqti"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("admin", "Administrator"),
                            ("moderator", "Moderator"),
                            ("user", "Foydalanuvchi"),
                        ],
                        default="user",
                        max_length=255,
                        null=True,
                        verbose_name="Rol",
                    ),
                ),
                (
                    "institution_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Muassasa raqami",
                    ),
                ),
                (
                    "response_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="response_file/",
                        verbose_name="Javob hujjati",
                    ),
                ),
                (
                    "status_file",
                    models.CharField(
                        choices=[
                            ("NO_FILE", "Hujjat yuklanmagan"),
                            ("WAITING", "Hujjat topshirgan"),
                            ("ACCEPTED", "Shartnoma tuzilgan"),
                            ("REJECTED", "Shartnoma bekor qilingan"),
                        ],
                        default="NO_FILE",
                        max_length=255,
                        verbose_name="Status",
                    ),
                ),
                (
                    "status",
                    models.BooleanField(
                        default=False, verbose_name="Shartnoma statusi"
                    ),
                ),
                (
                    "document",
                    models.ManyToManyField(
                        blank=True, to="pedagog.document", verbose_name="Hujjat"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="users.district",
                        verbose_name="Tuman",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="users.region",
                        verbose_name="Viloyat",
                    ),
                ),
            ],
            options={
                "verbose_name": "Foydalanuvchilar",
                "verbose_name_plural": "Foydalanuvchilar",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ResetToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "token",
                    models.CharField(max_length=255, unique=True, verbose_name="Token"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Foydalanuvchi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tokenni tiklash",
                "verbose_name_plural": "Tokenni tiklash",
            },
        ),
    ]
